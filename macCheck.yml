---
- name: Recolectar información del sistema
  hosts: localhost
  connection: local
  gather_facts: yes

  tasks:
    - name: Mostrar información del sistema desde facts
      debug:
        msg:
          - "Nombre del host: {{ ansible_hostname }}"
          - "Sistema operativo: {{ ansible_system }}"
          - "Distribución: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Arquitectura: {{ ansible_architecture }}"
          - "Número de CPUs: {{ ansible_processor_count }}"
          - "Número de CPUs lógicas: {{ ansible_processor_cores }}"
          - "Memoria total: {{ (ansible_memtotal_mb / 1024) | round(2) }} GB"
          - "Memoria disponible: {{ (ansible_memfree_mb / 1024) | round(2) }} GB"

    - name: Obtener información del disco
      setup:
        filter: ansible_mounts
      register: disk_facts

    - name: Mostrar información de discos
      debug:
        msg: "Puntos de montaje: {{ disk_facts.ansible_facts.ansible_mounts | map(attribute='mount') | list }}"

    - name: Obtener espacio en disco
      command: df -h /
      register: disk_usage
      changed_when: false

    - name: Mostrar espacio en disco
      debug:
        msg: "Uso de disco: {{ disk_usage.stdout }}"

    - name: Verificar si es contenedor Docker
      shell: |
        if [ -f /.dockerenv ]; then
          echo "true"
        elif grep -q docker /proc/self/cgroup 2>/dev/null; then
          echo "true" 
        else
          echo "false"
        fi
      register: docker_check
      changed_when: false

    - name: Mostrar entorno de ejecución
      debug:
        msg:
          - "Ejecutando en contenedor Docker: {{ docker_check.stdout }}"
          - "Es Linux: {{ ansible_system == 'Linux' }}"
          - "Kernel: {{ ansible_kernel }}"
          - "Es ARM64: {{ ansible_architecture == 'aarch64' }}"

    - name: Obtener información de la imagen Docker
      shell: |
        if [ -f /etc/os-release ]; then
          cat /etc/os-release | grep -E "PRETTY_NAME|NAME|VERSION" | head -3
        else
          echo "No disponible"
        fi
      register: os_info
      changed_when: false
      when: docker_check.stdout == "true"

    - name: Mostrar información del SO contenedor
      debug:
        msg: "Información del SO: {{ os_info.stdout_lines }}"
      when: docker_check.stdout == "true" and os_info is defined

    - name: Resumen del sistema
      debug:
        msg:
          - "=== RESUMEN DEL SISTEMA ==="
          - "Host: {{ ansible_hostname }}"
          - "SO: {{ ansible_system }} {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Arquitectura: {{ ansible_architecture }}"
          - "Kernel: {{ ansible_kernel }}"
          - "CPUs: {{ ansible_processor_count }} físicas, {{ ansible_processor_cores }} lógicas"
          - "Memoria: {{ (ansible_memtotal_mb / 1024) | round(2) }} GB"
          - "Docker: {{ docker_check.stdout }}"
          - "Espacio disco: {{ disk_usage.stdout_lines[1] if disk_usage.stdout_lines|length > 1 else 'N/A' }}"
